{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/device-accounts/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;IA0CpC,kCAAiB;;;;IACnD;;;OAGG;;;;;IAEH,4BAAG;;;;;QACD,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,kCAAS;;;;;cAAC,IAAY;QACpB,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,kCAAS;;;;;QACP,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,iCAAQ;;;;;QACN,MAAM,CAAC;KACR;;gBArCF,UAAU;;;QAMR,OAAO,EAAE;;;;6CAGT;;QAOA,OAAO,EAAE;;;;mDAGT;;QAMA,OAAO,EAAE;;;;mDAGT;;QAMA,OAAO,EAAE;;;;kDAGT;;;;;;;;;;;;;;;;;;;;;;IApCU,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,uDAAuD;YAC7D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,cAAc,EAqC1B;yBAhFD;EA2CoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface AndroidAccount {\n  /** Account creator */\n  CREATOR: AndroidAccount;\n\n  /** Account name */\n  name: string;\n\n  /** Account type */\n  type: string;\n}\n\n/**\n * @name Device Accounts\n * @description\n * Gets the Google accounts associated with the Android device\n *\n * @usage\n * ```typescript\n * import { DeviceAccounts } from '@ionic-native/device-accounts';\n *\n * constructor(private deviceAccounts: DeviceAccounts) { }\n *\n * ...\n *\n * this.deviceAccounts.get()\n *   .then(accounts => console.log(accounts))\n *   .catch(error => console.error(error));\n *\n * ```\n * @interfaces\n * AndroidAccount\n */\n@Plugin({\n  pluginName: 'DeviceAccounts',\n  plugin: 'cordova-device-accounts',\n  pluginRef: 'plugins.DeviceAccounts',\n  repo: 'https://github.com/danielsogl/cordova-device-accounts',\n  platforms: ['Android']\n})\n@Injectable()\nexport class DeviceAccounts extends IonicNativePlugin {\n  /**\n   *  Gets all accounts registered on the Android Device\n   * @returns {Promise<AndroidAccount[]>}\n   */\n  @Cordova()\n  get(): Promise<AndroidAccount[]> {\n    return;\n  }\n\n  /**\n   *  Get all accounts registered on Android device for requested type\n   * @param {string} type\n   * @returns {Promise<AndroidAccount[]>}\n   */\n  @Cordova()\n  getByType(type: string): Promise<AndroidAccount[]> {\n    return;\n  }\n\n  /**\n   *  Get all emails registered on Android device (accounts with 'com.google' type)\n   * @returns {Promise<string[]>}\n   */\n  @Cordova()\n  getEmails(): Promise<string[]> {\n    return;\n  }\n\n  /**\n   *  Get the first email registered on Android device\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  getEmail(): Promise<string> {\n    return;\n  }\n}\n"]}